// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using OpenFoodFactsAPIData;
//
//    var productDataClass = ProductDataClass.FromJson(jsonString);

namespace OpenFoodFactsAPIData
{
    using System;
    using System.Collections.Generic;
    using OpenFoodFactsAPIData;

    using System.Globalization;
    using System.Linq;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ProductDataClass
    {
        [JsonProperty("product")]
        public Product Product { get; set; }

        [JsonProperty("status")]
        public long Status { get; set; }

        [JsonProperty("status_verbose")]
        public string StatusVerbose { get; set; }

        [JsonProperty("code")]
        public string Code { get; set; }
    }

    public partial class Product
    {
        [JsonProperty("image_nutrition_small_url")]
        public Uri ImageNutritionSmallUrl { get; set; }

        [JsonProperty("ingredients_text_fr_debug_tags")]
        public List<object> IngredientsTextFrDebugTags { get; set; }

        [JsonProperty("product_name_fr_debug_tags")]
        public List<object> ProductNameFrDebugTags { get; set; }

        [JsonProperty("nutrition_score_warning_no_fruits_vegetables_nuts")]
        public long NutritionScoreWarningNoFruitsVegetablesNuts { get; set; }

        [JsonProperty("amino_acids_tags")]
        public List<object> AminoAcidsTags { get; set; }

        [JsonProperty("no_nutrition_data")]
        public string NoNutritionData { get; set; }

        [JsonProperty("completeness")]
        public double Completeness { get; set; }

        [JsonProperty("nova_groups")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long NovaGroups { get; set; }

        [JsonProperty("conservation_conditions_fr")]
        public string ConservationConditionsFr { get; set; }

        [JsonProperty("net_weight_value")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long NetWeightValue { get; set; }

        [JsonProperty("rev")]
        public long Rev { get; set; }

        [JsonProperty("nova_groups_tags")]
        public List<string> NovaGroupsTags { get; set; }

        [JsonProperty("nutrient_levels")]
        public NutrientLevels NutrientLevels { get; set; }

        [JsonProperty("labels_lc")]
        public string LabelsLc { get; set; }

        [JsonProperty("completed_t")]
        public long CompletedT { get; set; }

        [JsonProperty("packaging_debug_tags")]
        public List<object> PackagingDebugTags { get; set; }

        [JsonProperty("nucleotides_tags")]
        public List<object> NucleotidesTags { get; set; }

        [JsonProperty("stores_tags")]
        public List<string> StoresTags { get; set; }

        [JsonProperty("codes_tags")]
        public List<string> CodesTags { get; set; }

        [JsonProperty("created_t")]
        public long CreatedT { get; set; }

        [JsonProperty("categories_lc")]
        public string CategoriesLc { get; set; }

        [JsonProperty("traces_debug_tags")]
        public List<object> TracesDebugTags { get; set; }

        [JsonProperty("stores")]
        public string Stores { get; set; }

        [JsonProperty("last_image_dates_tags")]
        public List<string> LastImageDatesTags { get; set; }

        [JsonProperty("manufacturing_places_debug_tags")]
        public List<object> ManufacturingPlacesDebugTags { get; set; }

        [JsonProperty("languages_codes")]
        public LanguagesCodes LanguagesCodes { get; set; }

        [JsonProperty("minerals_tags")]
        public List<object> MineralsTags { get; set; }

        [JsonProperty("nutrition_grade_fr_producer")]
        public string NutritionGradeFrProducer { get; set; }

        [JsonProperty("link_debug_tags")]
        public List<object> LinkDebugTags { get; set; }

        [JsonProperty("purchase_places")]
        public string PurchasePlaces { get; set; }

        [JsonProperty("lc")]
        public string Lc { get; set; }

        [JsonProperty("ingredients_text")]
        public string IngredientsText { get; set; }

        [JsonProperty("nutrition_grades_tags")]
        public List<string> NutritionGradesTags { get; set; }

        [JsonProperty("serving_quantity")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long ServingQuantity { get; set; }

        [JsonProperty("recycling_instructions_to_discard")]
        public string RecyclingInstructionsToDiscard { get; set; }

        [JsonProperty("net_weight_unit")]
        public string NetWeightUnit { get; set; }

        [JsonProperty("states_hierarchy")]
        public List<string> StatesHierarchy { get; set; }

        [JsonProperty("ingredients_from_or_that_may_be_from_palm_oil_n")]
        public long IngredientsFromOrThatMayBeFromPalmOilN { get; set; }

        [JsonProperty("packaging")]
        public string Packaging { get; set; }

        [JsonProperty("ingredients_text_fr")]
        public string IngredientsTextFr { get; set; }

        [JsonProperty("origins")]
        public string Origins { get; set; }

        [JsonProperty("link")]
        public string Link { get; set; }

        [JsonProperty("code")]
        public string Code { get; set; }

        [JsonProperty("unknown_nutrients_tags")]
        public List<object> UnknownNutrientsTags { get; set; }

        [JsonProperty("vitamins_tags")]
        public List<object> VitaminsTags { get; set; }

        [JsonProperty("product_name_fr")]
        public string ProductNameFr { get; set; }

        [JsonProperty("image_thumb_url")]
        public Uri ImageThumbUrl { get; set; }

        [JsonProperty("additives_tags")]
        public List<string> AdditivesTags { get; set; }

        [JsonProperty("languages")]
        public Languages Languages { get; set; }

        [JsonProperty("nutriments")]
        public Nutriments Nutriments { get; set; }

        [JsonProperty("quantity")]
        public string Quantity { get; set; }

        [JsonProperty("additives_original_tags")]
        public List<string> AdditivesOriginalTags { get; set; }

        [JsonProperty("nutrition_score_debug")]
        public string NutritionScoreDebug { get; set; }

        [JsonProperty("purchase_places_tags")]
        public List<string> PurchasePlacesTags { get; set; }

        [JsonProperty("image_nutrition_url")]
        public Uri ImageNutritionUrl { get; set; }

        [JsonProperty("pnns_groups_2")]
        public string PnnsGroups2 { get; set; }

        [JsonProperty("id")]
        public string ProductId { get; set; }

        [JsonProperty("_id")]
        public string Id { get; set; }

        [JsonProperty("image_ingredients_thumb_url")]
        public Uri ImageIngredientsThumbUrl { get; set; }

        [JsonProperty("ingredients_from_palm_oil_tags")]
        public List<object> IngredientsFromPalmOilTags { get; set; }

        [JsonProperty("labels_prev_tags")]
        public List<string> LabelsPrevTags { get; set; }

        [JsonProperty("expiration_date")]
        public string ExpirationDate { get; set; }

        [JsonProperty("data_sources_tags")]
        public List<string> DataSourcesTags { get; set; }

        [JsonProperty("cities_tags")]
        public List<object> CitiesTags { get; set; }

        [JsonProperty("additives_old_tags")]
        public List<string> AdditivesOldTags { get; set; }

        [JsonProperty("labels")]
        public string Labels { get; set; }

        [JsonProperty("entry_dates_tags")]
        public List<string> EntryDatesTags { get; set; }

        [JsonProperty("vitamins_prev_tags")]
        public List<object> VitaminsPrevTags { get; set; }

        [JsonProperty("image_front_url")]
        public Uri ImageFrontUrl { get; set; }

        [JsonProperty("nova_group_debug")]
        public string NovaGroupDebug { get; set; }

        [JsonProperty("ingredients_original_tags")]
        public List<string> IngredientsOriginalTags { get; set; }

        [JsonProperty("allergens")]
        public string Allergens { get; set; }

        [JsonProperty("manufacturing_places_tags")]
        public List<object> ManufacturingPlacesTags { get; set; }

        [JsonProperty("other_nutritional_substances_tags")]
        public List<object> OtherNutritionalSubstancesTags { get; set; }

        [JsonProperty("fruits-vegetables-nuts_100g_estimate")]
        public long FruitsVegetablesNuts100GEstimate { get; set; }

        [JsonProperty("correctors_tags")]
        public List<string> CorrectorsTags { get; set; }

        [JsonProperty("image_nutrition_thumb_url")]
        public Uri ImageNutritionThumbUrl { get; set; }

        [JsonProperty("ingredients_text_debug")]
        public string IngredientsTextDebug { get; set; }

        [JsonProperty("origins_tags")]
        public List<object> OriginsTags { get; set; }

        [JsonProperty("labels_hierarchy")]
        public List<string> LabelsHierarchy { get; set; }

        [JsonProperty("other_information_fr")]
        public string OtherInformationFr { get; set; }

        [JsonProperty("nutrition_grades")]
        public string NutritionGrades { get; set; }

        [JsonProperty("emb_codes_orig")]
        public string EmbCodesOrig { get; set; }

        [JsonProperty("image_small_url")]
        public Uri ImageSmallUrl { get; set; }

        [JsonProperty("data_sources")]
        public string DataSources { get; set; }

        [JsonProperty("serving_size")]
        public string ServingSize { get; set; }

        [JsonProperty("ingredients_n")]
        public long IngredientsN { get; set; }

        [JsonProperty("photographers_tags")]
        public List<string> PhotographersTags { get; set; }

        [JsonProperty("checkers_tags")]
        public List<object> CheckersTags { get; set; }

        [JsonProperty("countries_hierarchy")]
        public List<string> CountriesHierarchy { get; set; }

        [JsonProperty("ingredients_hierarchy")]
        public List<string> IngredientsHierarchy { get; set; }

        [JsonProperty("emb_codes")]
        public string EmbCodes { get; set; }

        [JsonProperty("image_front_small_url")]
        public Uri ImageFrontSmallUrl { get; set; }

        [JsonProperty("generic_name_fr")]
        public string GenericNameFr { get; set; }

        [JsonProperty("debug_param_sorted_langs")]
        public List<string> DebugParamSortedLangs { get; set; }

        [JsonProperty("pnns_groups_2_tags")]
        public List<string> PnnsGroups2_Tags { get; set; }

        [JsonProperty("labels_tags")]
        public List<string> LabelsTags { get; set; }

        [JsonProperty("nutrition_data_per")]
        public string NutritionDataPer { get; set; }

        [JsonProperty("image_url")]
        public Uri ImageUrl { get; set; }

        [JsonProperty("creator")]
        public string Creator { get; set; }

        [JsonProperty("interface_version_created")]
        public string InterfaceVersionCreated { get; set; }

        [JsonProperty("nova_group")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long NovaGroup { get; set; }

        [JsonProperty("traces_tags")]
        public List<string> TracesTags { get; set; }

        [JsonProperty("generic_name")]
        public string GenericName { get; set; }

        [JsonProperty("labels_debug_tags")]
        public List<string> LabelsDebugTags { get; set; }

        [JsonProperty("last_modified_t")]
        public long LastModifiedT { get; set; }

        [JsonProperty("nutrition_grade_fr")]
        public string NutritionGradeFr { get; set; }

        [JsonProperty("ingredients_tags")]
        public List<string> IngredientsTags { get; set; }

        [JsonProperty("languages_hierarchy")]
        public List<string> LanguagesHierarchy { get; set; }

        [JsonProperty("origins_debug_tags")]
        public List<object> OriginsDebugTags { get; set; }

        [JsonProperty("update_key")]
        public string UpdateKey { get; set; }

        [JsonProperty("image_front_thumb_url")]
        public Uri ImageFrontThumbUrl { get; set; }

        [JsonProperty("sources")]
        public List<Source> Sources { get; set; }

        [JsonProperty("pnns_groups_1_tags")]
        public List<string> PnnsGroups1_Tags { get; set; }

        [JsonProperty("emb_codes_tags")]
        public List<object> EmbCodesTags { get; set; }

        [JsonProperty("lang")]
        public string Lang { get; set; }

        [JsonProperty("complete")]
        public long Complete { get; set; }

        [JsonProperty("informers_tags")]
        public List<string> InformersTags { get; set; }

        [JsonProperty("countries_debug_tags")]
        public List<object> CountriesDebugTags { get; set; }

        [JsonProperty("packaging_tags")]
        public List<string> PackagingTags { get; set; }

        [JsonProperty("nucleotides_prev_tags")]
        public List<object> NucleotidesPrevTags { get; set; }

        [JsonProperty("nutrition_data_per_debug_tags")]
        public List<object> NutritionDataPerDebugTags { get; set; }

        [JsonProperty("carbon_footprint_from_known_ingredients_debug")]
        public string CarbonFootprintFromKnownIngredientsDebug { get; set; }

        [JsonProperty("last_edit_dates_tags")]
        public List<string> LastEditDatesTags { get; set; }

        [JsonProperty("other_information")]
        public string OtherInformation { get; set; }

        [JsonProperty("purchase_places_debug_tags")]
        public List<object> PurchasePlacesDebugTags { get; set; }

        [JsonProperty("ingredients_ids_debug")]
        public List<string> IngredientsIdsDebug { get; set; }

        [JsonProperty("ingredients_n_tags")]
        public List<string> IngredientsNTags { get; set; }

        [JsonProperty("quality_tags")]
        public List<string> QualityTags { get; set; }

        [JsonProperty("brands_debug_tags")]
        public List<object> BrandsDebugTags { get; set; }

        [JsonProperty("last_image_t")]
        public long LastImageT { get; set; }

        [JsonProperty("traces_hierarchy")]
        public List<string> TracesHierarchy { get; set; }

        [JsonProperty("additives_n")]
        public long AdditivesN { get; set; }

        [JsonProperty("languages_tags")]
        public List<string> LanguagesTags { get; set; }

        [JsonProperty("minerals_prev_tags")]
        public List<object> MineralsPrevTags { get; set; }

        [JsonProperty("quantity_debug_tags")]
        public List<object> QuantityDebugTags { get; set; }

        [JsonProperty("product_quantity")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long ProductQuantity { get; set; }

        [JsonProperty("max_imgid")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long MaxImgid { get; set; }

        [JsonProperty("recycling_instructions_to_discard_fr")]
        public string RecyclingInstructionsToDiscardFr { get; set; }

        [JsonProperty("amino_acids_prev_tags")]
        public List<object> AminoAcidsPrevTags { get; set; }

        [JsonProperty("ingredients_text_with_allergens")]
        public string IngredientsTextWithAllergens { get; set; }

        [JsonProperty("_keywords")]
        public List<string> Keywords { get; set; }

        [JsonProperty("image_ingredients_url")]
        public Uri ImageIngredientsUrl { get; set; }

        [JsonProperty("lang_debug_tags")]
        public List<object> LangDebugTags { get; set; }

        [JsonProperty("categories_hierarchy")]
        public List<string> CategoriesHierarchy { get; set; }

        [JsonProperty("ingredients_that_may_be_from_palm_oil_tags")]
        public List<object> IngredientsThatMayBeFromPalmOilTags { get; set; }

        [JsonProperty("unknown_ingredients_n")]
        public long UnknownIngredientsN { get; set; }

        [JsonProperty("carbon_footprint_percent_of_known_ingredients")]
        public double CarbonFootprintPercentOfKnownIngredients { get; set; }

        [JsonProperty("pnns_groups_1")]
        public string PnnsGroups1 { get; set; }

        [JsonProperty("categories_tags")]
        public List<string> CategoriesTags { get; set; }

        [JsonProperty("allergens_tags")]
        public List<string> AllergensTags { get; set; }

        [JsonProperty("brands")]
        public string Brands { get; set; }

        [JsonProperty("nutrition_score_warning_no_fiber")]
        public long NutritionScoreWarningNoFiber { get; set; }

        [JsonProperty("nutrition_score_beverage")]
        public long NutritionScoreBeverage { get; set; }

        [JsonProperty("ingredients_analysis_tags")]
        public List<string> IngredientsAnalysisTags { get; set; }

        [JsonProperty("images")]
        public Images Images { get; set; }

        [JsonProperty("states")]
        public string States { get; set; }

        [JsonProperty("product_name")]
        public string ProductName { get; set; }

        [JsonProperty("ingredients_that_may_be_from_palm_oil_n")]
        public long IngredientsThatMayBeFromPalmOilN { get; set; }

        [JsonProperty("additives_debug_tags")]
        public List<string> AdditivesDebugTags { get; set; }

        [JsonProperty("producer_version_id")]
        public string ProducerVersionId { get; set; }

        [JsonProperty("countries_lc")]
        public string CountriesLc { get; set; }

        [JsonProperty("stores_debug_tags")]
        public List<object> StoresDebugTags { get; set; }

        [JsonProperty("image_ingredients_small_url")]
        public Uri ImageIngredientsSmallUrl { get; set; }

        [JsonProperty("additives_prev_original_tags")]
        public List<string> AdditivesPrevOriginalTags { get; set; }

        [JsonProperty("categories")]
        public string Categories { get; set; }

        [JsonProperty("last_modified_by")]
        public string LastModifiedBy { get; set; }

        [JsonProperty("conservation_conditions")]
        public string ConservationConditions { get; set; }

        [JsonProperty("last_editor")]
        public string LastEditor { get; set; }

        [JsonProperty("interface_version_modified")]
        public string InterfaceVersionModified { get; set; }

        [JsonProperty("ingredients")]
        public List<Ingredient> Ingredients { get; set; }

        [JsonProperty("labels_prev_hierarchy")]
        public List<string> LabelsPrevHierarchy { get; set; }

        [JsonProperty("misc_tags")]
        public List<string> MiscTags { get; set; }

        [JsonProperty("additives_old_n")]
        public long AdditivesOldN { get; set; }

        [JsonProperty("allergens_from_ingredients")]
        public string AllergensFromIngredients { get; set; }

        [JsonProperty("selected_images")]
        public SelectedImages SelectedImages { get; set; }

        [JsonProperty("states_tags")]
        public List<string> StatesTags { get; set; }

        [JsonProperty("nutrition_data_prepared_per")]
        public string NutritionDataPreparedPer { get; set; }

        [JsonProperty("editors_tags")]
        public List<string> EditorsTags { get; set; }

        [JsonProperty("traces")]
        public string Traces { get; set; }

        [JsonProperty("manufacturing_places")]
        public string ManufacturingPlaces { get; set; }

        [JsonProperty("emb_codes_debug_tags")]
        public List<object> EmbCodesDebugTags { get; set; }

        [JsonProperty("ingredients_text_with_allergens_fr")]
        public string IngredientsTextWithAllergensFr { get; set; }

        [JsonProperty("nutrient_levels_tags")]
        public List<string> NutrientLevelsTags { get; set; }

        [JsonProperty("traces_from_ingredients")]
        public string TracesFromIngredients { get; set; }

        [JsonProperty("expiration_date_debug_tags")]
        public List<object> ExpirationDateDebugTags { get; set; }

        [JsonProperty("serving_size_debug_tags")]
        public List<object> ServingSizeDebugTags { get; set; }

        [JsonProperty("allergens_hierarchy")]
        public List<string> AllergensHierarchy { get; set; }

        [JsonProperty("brands_tags")]
        public List<string> BrandsTags { get; set; }

        [JsonProperty("ingredients_debug")]
        public List<string> IngredientsDebug { get; set; }

        [JsonProperty("countries_tags")]
        public List<string> CountriesTags { get; set; }

        [JsonProperty("countries")]
        public string Countries { get; set; }

        [JsonProperty("generic_name_fr_debug_tags")]
        public List<object> GenericNameFrDebugTags { get; set; }

        [JsonProperty("ingredients_from_palm_oil_n")]
        public long IngredientsFromPalmOilN { get; set; }

        [JsonProperty("sortkey")]
        public long Sortkey { get; set; }
    }

    public partial class Images
    {
        [JsonProperty("1")]
        public The1 The1 { get; set; }

        [JsonProperty("2")]
        public The1 The2 { get; set; }

        [JsonProperty("3")]
        public The1 The3 { get; set; }

        [JsonProperty("4")]
        public The1 The4 { get; set; }

        [JsonProperty("5")]
        public The1 The5 { get; set; }

        [JsonProperty("ingredients_fr")]
        public Fr IngredientsFr { get; set; }

        [JsonProperty("nutrition_fr")]
        public Fr NutritionFr { get; set; }

        [JsonProperty("front_fr")]
        public Fr FrontFr { get; set; }
    }

    public partial class Fr
    {
        [JsonProperty("geometry")]
        public string Geometry { get; set; }

        [JsonProperty("rev")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Rev { get; set; }

        [JsonProperty("angle")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Angle { get; set; }

        [JsonProperty("x2")]
        public string X2 { get; set; }

        [JsonProperty("y2")]
        public string Y2 { get; set; }

        [JsonProperty("imgid")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Imgid { get; set; }

        [JsonProperty("white_magic")]
        [JsonConverter(typeof(FluffyParseStringConverter))]
        public bool WhiteMagic { get; set; }

        [JsonProperty("x1")]
        public string X1 { get; set; }

        [JsonProperty("normalize")]
        [JsonConverter(typeof(FluffyParseStringConverter))]
        public bool Normalize { get; set; }

        [JsonProperty("y1")]
        public string Y1 { get; set; }

        [JsonProperty("sizes")]
        public Sizes Sizes { get; set; }
    }

    public partial class Sizes
    {
        [JsonProperty("100")]
        public The100 The100 { get; set; }

        [JsonProperty("400")]
        public The100 The400 { get; set; }

        [JsonProperty("full")]
        public The100 Full { get; set; }

        [JsonProperty("200", NullValueHandling = NullValueHandling.Ignore)]
        public The100 The200 { get; set; }
    }

    public partial class The100
    {
        [JsonProperty("w")]
        public long W { get; set; }

        [JsonProperty("h")]
        public long H { get; set; }
    }

    public partial class The1
    {
        [JsonProperty("uploader")]
        public string Uploader { get; set; }

        [JsonProperty("sizes")]
        public Sizes Sizes { get; set; }

        [JsonProperty("uploaded_t")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long UploadedT { get; set; }
    }

    public partial class Ingredient
    {
        [JsonProperty("percent", NullValueHandling = NullValueHandling.Ignore)]
        public string Percent { get; set; }

        [JsonProperty("rank", NullValueHandling = NullValueHandling.Ignore)]
        public long? Rank { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("text")]
        public string Text { get; set; }

        [JsonProperty("vegetarian", NullValueHandling = NullValueHandling.Ignore)]
        public FromPalmOil? Vegetarian { get; set; }

        [JsonProperty("vegan", NullValueHandling = NullValueHandling.Ignore)]
        public FromPalmOil? Vegan { get; set; }

        [JsonProperty("from_palm_oil", NullValueHandling = NullValueHandling.Ignore)]
        public FromPalmOil? FromPalmOil { get; set; }

        [JsonProperty("origin", NullValueHandling = NullValueHandling.Ignore)]
        public string Origin { get; set; }
    }

    public partial class Languages
    {
        [JsonProperty("en:french")]
        public long EnFrench { get; set; }
    }

    public partial class LanguagesCodes
    {
        [JsonProperty("fr")]
        public long Fr { get; set; }
    }

    public partial class NutrientLevels
    {
        [JsonProperty("salt")]
        public string Salt { get; set; }

        [JsonProperty("sugars")]
        public string Sugars { get; set; }

        [JsonProperty("saturated-fat")]
        public string SaturatedFat { get; set; }

        [JsonProperty("fat")]
        public string Fat { get; set; }
    }

    public partial class Nutriments
    {
        [JsonProperty("saturated-fat_unit")]
        public string SaturatedFatUnit { get; set; }

        [JsonProperty("nutrition-score-fr-producer_serving")]
        public long NutritionScoreFrProducerServing { get; set; }

        [JsonProperty("nutrition-score-fr")]
        public long NutritionScoreFr { get; set; }

        [JsonProperty("energy_100g")]
        public long Energy100G { get; set; }

        [JsonProperty("nutrition-score-fr-producer_value")]
        public long NutritionScoreFrProducerValue { get; set; }

        [JsonProperty("nutrition-score-fr_serving")]
        public long NutritionScoreFrServing { get; set; }

        [JsonProperty("sugars_unit")]
        public string SugarsUnit { get; set; }

        [JsonProperty("sodium_100g")]
        public double Sodium100G { get; set; }

        [JsonProperty("carbon-footprint-from-known-ingredients_product")]
        public long CarbonFootprintFromKnownIngredientsProduct { get; set; }

        [JsonProperty("nutrition-score-uk")]
        public long NutritionScoreUk { get; set; }

        [JsonProperty("sugars_serving")]
        public double SugarsServing { get; set; }

        [JsonProperty("carbohydrates")]
        public long Carbohydrates { get; set; }

        [JsonProperty("nutrition-score-uk_100g")]
        public long NutritionScoreUk100G { get; set; }

        [JsonProperty("salt_serving")]
        public double SaltServing { get; set; }

        [JsonProperty("sugars")]
        public double Sugars { get; set; }

        [JsonProperty("sugars_100g")]
        public double Sugars100G { get; set; }

        [JsonProperty("energy_unit")]
        public string EnergyUnit { get; set; }

        [JsonProperty("fat_value")]
        public long FatValue { get; set; }

        [JsonProperty("energy")]
        public long Energy { get; set; }

        [JsonProperty("salt_value")]
        public double SaltValue { get; set; }

        [JsonProperty("nova-group")]
        public long NovaGroup { get; set; }

        [JsonProperty("saturated-fat")]
        public double SaturatedFat { get; set; }

        [JsonProperty("nova-group_serving")]
        public long NovaGroupServing { get; set; }

        [JsonProperty("carbon-footprint-from-known-ingredients_100g")]
        public double CarbonFootprintFromKnownIngredients100G { get; set; }

        [JsonProperty("carbohydrates_unit")]
        public string CarbohydratesUnit { get; set; }

        [JsonProperty("sugars_value")]
        public double SugarsValue { get; set; }

        [JsonProperty("nutrition-score-fr_100g")]
        public long NutritionScoreFr100G { get; set; }

        [JsonProperty("carbohydrates_serving")]
        public long CarbohydratesServing { get; set; }

        [JsonProperty("proteins_100g")]
        public double Proteins100G { get; set; }

        [JsonProperty("nutrition-score-fr-producer_100g")]
        public double NutritionScoreFrProducer100G { get; set; }

        [JsonProperty("nova-group_100g")]
        public long NovaGroup100G { get; set; }

        [JsonProperty("sodium_unit")]
        public string SodiumUnit { get; set; }

        [JsonProperty("nutrition-score-fr-producer")]
        public long NutritionScoreFrProducer { get; set; }

        [JsonProperty("carbohydrates_100g")]
        public double Carbohydrates100G { get; set; }

        [JsonProperty("fat_serving")]
        public long FatServing { get; set; }

        [JsonProperty("salt")]
        public double Salt { get; set; }

        [JsonProperty("sodium_serving")]
        public double SodiumServing { get; set; }

        [JsonProperty("proteins_serving")]
        public long ProteinsServing { get; set; }

        [JsonProperty("saturated-fat_100g")]
        public double SaturatedFat100G { get; set; }

        [JsonProperty("saturated-fat_serving")]
        public double SaturatedFatServing { get; set; }

        [JsonProperty("carbohydrates_value")]
        public long CarbohydratesValue { get; set; }

        [JsonProperty("nutrition-score-fr-producer_unit")]
        public string NutritionScoreFrProducerUnit { get; set; }

        [JsonProperty("proteins")]
        public long Proteins { get; set; }

        [JsonProperty("salt_100g")]
        public double Salt100G { get; set; }

        [JsonProperty("nutrition-score-uk_serving")]
        public long NutritionScoreUkServing { get; set; }

        [JsonProperty("proteins_unit")]
        public string ProteinsUnit { get; set; }

        [JsonProperty("sodium_value")]
        public double SodiumValue { get; set; }

        [JsonProperty("saturated-fat_value")]
        public double SaturatedFatValue { get; set; }

        [JsonProperty("fat")]
        public long Fat { get; set; }

        [JsonProperty("salt_unit")]
        public string SaltUnit { get; set; }

        [JsonProperty("fat_unit")]
        public string FatUnit { get; set; }

        [JsonProperty("proteins_value")]
        public long ProteinsValue { get; set; }

        [JsonProperty("fat_100g")]
        public double Fat100G { get; set; }

        [JsonProperty("sodium")]
        public double Sodium { get; set; }

        [JsonProperty("energy_serving")]
        public long EnergyServing { get; set; }

        [JsonProperty("carbon-footprint-from-known-ingredients_serving")]
        public long CarbonFootprintFromKnownIngredientsServing { get; set; }

        [JsonProperty("energy_value")]
        public long EnergyValue { get; set; }
    }

    public partial class SelectedImages
    {
        [JsonProperty("front")]
        public Front Front { get; set; }

        [JsonProperty("nutrition")]
        public Front Nutrition { get; set; }

        [JsonProperty("ingredients")]
        public Front Ingredients { get; set; }
    }

    public partial class Front
    {
        [JsonProperty("display")]
        public Display Display { get; set; }

        [JsonProperty("thumb")]
        public Display Thumb { get; set; }

        [JsonProperty("small")]
        public Display Small { get; set; }
    }

    public partial class Display
    {
        [JsonProperty("fr")]
        public Uri Fr { get; set; }
    }

    public partial class Source
    {
        [JsonProperty("import_t")]
        public long ImportT { get; set; }

        [JsonProperty("fields")]
        public List<string> Fields { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("manufacturer")]
        public long Manufacturer { get; set; }

        [JsonProperty("images")]
        public List<object> Images { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }
    }

    public enum FromPalmOil { Maybe, No, Yes };

    public partial class ProductDataClass
    {
        public static ProductDataClass FromJson(string json) => JsonConvert.DeserializeObject<ProductDataClass>(json, OpenFoodFactsAPIData.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this ProductDataClass self) => JsonConvert.SerializeObject(self, OpenFoodFactsAPIData.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                FromPalmOilConverter.Singleton,
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class PurpleParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            long l;
            if (Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (long)untypedValue;
            serializer.Serialize(writer, value.ToString());
            return;
        }

        public static readonly PurpleParseStringConverter Singleton = new PurpleParseStringConverter();
    }

    internal class FluffyParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(bool) || t == typeof(bool?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            bool b;
            if (Boolean.TryParse(value, out b))
            {
                return b;
            }
            throw new Exception("Cannot unmarshal type bool");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (bool)untypedValue;
            var boolString = value ? "true" : "false";
            serializer.Serialize(writer, boolString);
            return;
        }

        public static readonly FluffyParseStringConverter Singleton = new FluffyParseStringConverter();
    }

    internal class FromPalmOilConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(FromPalmOil) || t == typeof(FromPalmOil?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "maybe":
                    return FromPalmOil.Maybe;
                case "no":
                    return FromPalmOil.No;
                case "yes":
                    return FromPalmOil.Yes;
            }
            throw new Exception("Cannot unmarshal type FromPalmOil");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (FromPalmOil)untypedValue;
            switch (value)
            {
                case FromPalmOil.Maybe:
                    serializer.Serialize(writer, "maybe");
                    return;
                case FromPalmOil.No:
                    serializer.Serialize(writer, "no");
                    return;
                case FromPalmOil.Yes:
                    serializer.Serialize(writer, "yes");
                    return;
            }
            throw new Exception("Cannot marshal type FromPalmOil");
        }

        public static readonly FromPalmOilConverter Singleton = new FromPalmOilConverter();
    }
}